% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deepforest.R
\name{deepforest}
\alias{deepforest}
\title{Deep Forest}
\usage{
deepforest(x, y, x_val = NULL, y_val = NULL, nfold = 5, index = NULL,
  objective = NULL, eval_func = NULL, nlayer = 5, nmeta = 4,
  nmetarep = 1, nclass = NULL, metatype = rep(c("bag", "boost", "dart",
  "lin"), length = nmeta * nmetarep), metaparam = NULL, metarandom = FALSE,
  colsample_bylayer = 1, colsample_add = FALSE, accumulate = FALSE,
  nthread = 2, missing = NA, printby = "fold", ...)
}
\arguments{
\item{x}{Object coercible to a matrix.}

\item{y}{A vector of labels for \code{x}.}

\item{x_val}{Object coercible as matrix used for validation. Defaults to  \code{x} if not
specified.}

\item{y_val}{A vector of labels for \code{x_val}.}

\item{nfold}{The number of folds to stack on. If \code{index} is specified, this argument
is ignored.}

\item{index}{A list of integers indicating observations belonging to each fold. Random
sampling is used if \code{NULL} to create \code{nfold} folds.}

\item{objective}{The objective passed to \code{\link{xgb.train}}. It is inferred by nclass if
not specified.}

\item{eval_func}{A function used to evaluate each meta model.}

\item{nlayer}{The number of layers to stack.}

\item{nmeta}{The number of meta models to build on each layer.}

\item{nmetarep}{The number of repeated meta models to construct.}

\item{nclass}{An integer indicating the number of classes. \code{1} for regression, \code{2}
for binary classification and \code{>2} for multiclass. If \code{NULL}, then
it is set to \code{length(unique(y))} if the value is less than 10 and 1
otherwise.}

\item{metatype}{A list of character variables indicating type of meta models to construct.
Currently supports "bag", "boost", "dart" and "lin" for a random forest,
boosted trees, boosted trees with dropout and boosted linear models
respectively, all based on xgboost. If length of \code{metatype} is not equal
to \code{nmeta * nmetarep} then it is recycled to that length.}

\item{metaparam}{A list indicating additional parameters for each meta model. The mechanism
used to generate default values and create randomized values are in
\code{\link{metaparam}}. If list is shorter than
\code{nmeta * nmetarep} then all meta models without a clear \code{metaparam}
will take on default values, so you should indicate manually tuned models
first in \code{metatype}.}

\item{metarandom}{A logical indicating whether to create randomized miscellaneous parameters.}

\item{colsample_bylayer}{A numeric vector between [0,1] indicating the fraction of features to sample
at each layer. If a single value, then you may use \code{colsample_add} to
further modify how the value changes, otherwise a constant value will be used
for each layer.}

\item{colsample_add}{Either a logical or a numeric. If \code{TRUE} then values will be added at
each layer to ensure that the final \code{nlayer} has a sampling rate of 1
(i.e. all features used). If \code{FALSE} then no modifier is applied to
\code{colsample_bylayer}. If a numeric value, that constant value is added
to \code{colsample_bylayer} after each layer.}

\item{accumulate}{A logical indicating if the predictions by meta models from each layer is
accumulated. If \code{FALSE} then each layer will not have the direct
predictions from two layers before although it will be implicitly
approximated by the predictions from the layer immediately before.}

\item{nthread}{The nthread argument passed to \code{\link{xgb.train}}.}

\item{missing}{The \code{missing} argument passed to \code{\link{xgb.train}}.}

\item{...}{Additional arguments passed to \code{\link{xgb.train}}.}
}
\value{
A \code{deepforest} object containing all the models constructed and sampling
results for used in prediction on test data.
}
\description{
A combination of stacking (per Kaggle) and the deep forest idea proposed in
https://arxiv.org/pdf/1702.08835.pdf with a few additional knobs and levers
of my own..
}
